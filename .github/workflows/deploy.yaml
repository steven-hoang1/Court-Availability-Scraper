name: Deploy to EC2

on:
  push:
    branches: [main]  # or your deployment branch

env:
  AWS_REGION: ap-southeast-2

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üßæ Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2 # Adjust region as necessary

    - name: üê≥ Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: üì¶ Build Docker image
      run: |
        docker build -t court-availability-api .
        docker tag court-availability-api:latest ${{ secrets.AWS_ECR_ACCOUNT_URL }}:latest

    - name: üì§ Push Docker image to ECR
      run: |
        docker push ${{ secrets.AWS_ECR_ACCOUNT_URL }}:latest

    - name: üì° Deploy on EC2 via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_ACCOUNT_URL }}
          docker system prune -af --volumes
          docker pull ${{ secrets.AWS_ECR_ACCOUNT_URL }}:latest
          docker stop court-availability-container || true
          docker rm court-availability-container || true
          docker run -d --name court-availability-container -p 10000:10000 ${{ secrets.AWS_ECR_ACCOUNT_URL }}:latest